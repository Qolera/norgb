/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "../zmk-nodefree-config/keypos_def/keypos_36keys.h"


// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)
// eñe EÑE sign
ZMK_UNICODE_PAIR(ene, N0, N0, F, N1, N0, N0, D, N1)

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define GAME 4

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1! |  2@ |  3#  |  4$  |  5%  |                   |  6^  |  7&   |  8*   |  9(  |   0)  |       |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   Ñ   |   ’”  |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | PLAY  |  N   |  M    |  ,<   |  .>  |   -_  |   /?  |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE|  ALT  | CTRL  | GUI  |
            bindings = <
&kp ESC   &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                         &kp N6 &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                          &kp Y  &kp U     &kp I     &kp O    &kp P     &kp BSPC
&sk LSHFT &kp A  &kp S    &kp D    &kp F     &kp G                          &kp H  &kp J     &kp K     &kp L    &ene      &kp RA(SQT)
&kp LCTRL &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE   &kp C_PLAY &kp N  &kp M     &kp COMMA &kp DOT  &kp MINUS &kp SLASH
                 &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp SPACE    &kp RET    &mo 2  &kp RALT  &kp RCTRL &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `~    |     |     |  €   | prev | next |                   |      |       |  UP   |      |       | BKSPC |
// | CAPS  |  {  |  }  |  (   |  )   |      |                   |      | LEFT  | DOWN  | RIGHT|       |   |   |
// |       |  -  |  +  |  [   |  ]   |  =   |        |  |       |      |       |  ;    |  :   |       |   \   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2      &kp F3      &kp F4     &kp F5                     &kp F6    &kp F7   &kp F8      &kp F9    &kp F10   &kp F11
&kp GRAVE &trans    &trans      &euro_sign  &kp K_NEXT &kp K_PREV                     &trans    &trans   &kp UP      &trans    &trans    &kp BSPC
&kp CAPS  &kp LBRC  &kp RBRC    &kp LS(N9)  &kp LS(N0) &kp RBRC                   &trans    &kp LEFT &kp DOWN    &kp RIGHT &trans    &kp PIPE
&trans    &kp MINUS &kp KP_PLUS &kp LBRC    &kp RBKT   &kp EQUAL  &trans   &trans &trans    &trans   &kp SEMI    &kp COLON &trans    &kp BSLH
                    &trans      &trans      &trans     &trans     &trans   &trans &trans    &trans   &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------             
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |   7  |   8   |   9  |   0   |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   4  |   5   |   6  |   +   |   ''  |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |   0  |   1  |   2   |   3  |   -   |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans  &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &kp N7    &kp N8   &kp N9  &kp N0  &trans
&trans     &kp RA(2)     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                &kp PG_DN &kp N4    &kp N5   &kp N6  &kp KP_PLUS  &kp LS(SQT)
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &kp N0    &kp N1    &kp N2   &kp N3  &kp MINUS  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        
        Adjust_layer {
            label = "ADJUST";
// ------------------------------------------------------------------------------------------------------------
// |USB/BLE|TOGBLE|TOGUSB|      |       |      |                |      |      |       |      |       |       |
// |       |      |      |      |       |      |                |      |      |       |      |       |       |
// |       |      |      |      |       | GAME |                |      |      |       |      |       |       |
// |       |      |      |      |       |      |      |  |      |      |      |       |      |       |       |
//                |      |      |       |      |      |  |      |      |      |       |      |
        bindings = <
&out OUT_TOG  &out OUT_BLE  &out OUT_USB  &none  &none  &none                       &none  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none  &none                       &none  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none  &tog GAME                   &none  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none  &none       &none  &none    &none  &none  &none  &none  &none  &none
                            &none         &none  &none  &none       &none  &none    &none  &none  &none  &none
            >;
        };
        
        Game_layer {
            label = "GAME";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |  BSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |   U   |   I   |  O   |   P   |   \   |
// | CTRL  |  A  |  S  |  D   |  F   |  G   |                   |  H   |   J   |   K   |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |        |  |       |  N   |   M   |   ,   |  .   |   /   | SHIFT |
//               |CTRL | ALT  | LGUI | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | LOCK  | DEL  |
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                          &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W      &kp E     &kp R     &kp T                           &kp Y   &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp LCTRL   &kp A   &kp S      &kp D     &kp F     &kp G                           &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B   &none       &none       &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                   &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp SPACE     &kp RET   &mo 2   &kp RCTRL  &kp LG(L)  &kp DEL
            >;
        };
    };
};
